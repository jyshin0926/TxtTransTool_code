{
  "_from": "cbor@^2.0.0",
  "_id": "cbor@2.0.2",
  "_inBundle": false,
  "_integrity": "sha1-fp9/UAF8a4/Hs/ufAw8q7ZBO1Cg=",
  "_location": "/cbor",
  "_phantomChildren": {},
  "_requested": {
    "type": "range",
    "registry": true,
    "raw": "cbor@^2.0.0",
    "name": "cbor",
    "escapedName": "cbor",
    "rawSpec": "^2.0.0",
    "saveSpec": null,
    "fetchSpec": "^2.0.0"
  },
  "_requiredBy": [
    "/clac"
  ],
  "_resolved": "https://registry.npmjs.org/cbor/-/cbor-2.0.2.tgz",
  "_shasum": "7e9f7f50017c6b8fc7b3fb9f030f2aed904ed428",
  "_spec": "cbor@^2.0.0",
  "_where": "C:\\Users\\Wookmawang\\Desktop\\공부\\개인 프로젝트\\node_modules\\clac",
  "author": {
    "name": "Joe Hildebrand",
    "email": "joe-github@cursive.net"
  },
  "ava": {
    "files": [
      "test/*.ava.js"
    ]
  },
  "bin": {
    "cbor2comment": "bin/cbor2comment",
    "cbor2diag": "bin/cbor2diag",
    "cbor2json": "bin/cbor2json",
    "json2cbor": "bin/json2cbor"
  },
  "browser": {
    "fs": false,
    "source-map-support": false
  },
  "bugs": {
    "url": "https://github.com/hildjj/node-cbor/issues"
  },
  "bundleDependencies": false,
  "contributors": [
    {
      "name": "Patrick Gansterer",
      "email": "paroga@paroga.com",
      "url": "http://paroga.com/"
    },
    {
      "name": "Artyom Yagilev",
      "email": "github@scorpi.org",
      "url": "http://scorpi.org/"
    }
  ],
  "dependencies": {
    "bignumber.js": "~2.4",
    "commander": "^2.9",
    "json-text-sequence": "^0.1",
    "nofilter": "^0.0.3"
  },
  "deprecated": false,
  "description": "Encode and parse data in the Concise Binary Object Representation (CBOR) data format (RFC7049).",
  "devDependencies": {
    "ava": "*",
    "garbage": "*",
    "optional-dev-dependency": ">=1.4"
  },
  "directories": {
    "lib": "lib",
    "man": "man"
  },
  "engines": {
    "node": ">=4"
  },
  "homepage": "http://hildjj.github.io/node-cbor/",
  "keywords": [
    "coap",
    "cbor",
    "json"
  ],
  "license": "MIT",
  "main": "./lib/cbor.js",
  "man": [],
  "name": "cbor",
  "optionalDevDependencies": {
    "ava": [
      "*",
      "test"
    ],
    "standard": [
      "*",
      "lint"
    ],
    "jsdoc": [
      "*",
      "doc"
    ],
    "minami": [
      "*",
      "doc"
    ],
    "marked-man": [
      "*",
      "man"
    ],
    "nyc": [
      "*",
      "coverage"
    ],
    "live-server": [
      "*",
      "dev"
    ],
    "npm-run-all": [
      "*",
      "dev"
    ],
    "watch": [
      "*",
      "dev"
    ],
    "coveralls": [
      "*",
      "ci"
    ]
  },
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/hildjj/node-cbor.git"
  },
  "scripts": {
    "clean": "rm -rf coverage .nyc_output/ docs/api man/*",
    "coverage": "nyc npm test",
    "coveragehtml": "nyc report -r html",
    "coveralls": "nyc report --reporter=text-lcov | coveralls",
    "dev": "npm-run-all -p --silent watch live",
    "doc": "jsdoc -c .jsdoc.conf",
    "lint": "standard src/*.js bin/* test/*.js",
    "live": "live-server --port=4002 --ignorePattern='(js|css|png)$' coverage",
    "man": "mkdir -p man; for f in man_src/*.md; do b=`basename $f`; marked-man $f -o man/${b%.md}.1; gzip -9f man/${b%.md}.1; done",
    "precoverage": "optional-dev-dependency -t coverage",
    "precoveragehtml": "npm run coverage",
    "precoveralls": "optional-dev-dependency -t ci",
    "predev": "if [ ! -f coverage/index.html ]; then mkdir coverage; cp .waiting.html coverage/index.html; fi; optional-dev-dependency -t dev",
    "predoc": "optional-dev-dependency -t doc",
    "prelint": "optional-dev-dependency -t lint",
    "preman": "optional-dev-dependency -t doc",
    "release": "npm version patch && git push --follow-tags && npm publish",
    "test": "ava",
    "watch": "watch 'npm run coveragehtml' lib/ test/"
  },
  "version": "2.0.2"
}
