#!/usr/bin/node
var net = require('net'),
    ArgumentParser = require('argparse').ArgumentParser,
    cbor = require('cbor'),
    CborDecoder = cbor.Decoder


var decoder = new CborDecoder(),
    config = require(process.cwd() + '/conquer.json'),
    client

switch (config.mode) {
    case 'network':
        client = net.createConnection(config.port);
        break;
    case 'socket':
    default:
        client = net.createConnection(config.path || './conquer.sock');
        break;
}

var parser = new ArgumentParser();
var subparsers = parser.addSubparsers({
    title: 'commands',
    dest: 'command'
});

client.on('connect', function () {
    // On established connection, get the server's
    // command list.
    client.write(cbor.encode({
        action: 'list'   
    }));
})

client.on('error', function(e) {
    console.log('conquer ERROR', e);
})

client.pipe(decoder)

decoder.on('data', function (data) {
    switch (data.type) {
        case 'list':
            for (var name in data.data) {
                var command = data.data[name],
                    subparser = subparsers.addParser(name, {addHelp: true})
                
                for (var i = 0, max = command.length; i < max; i += 1) {
                    var arg = command[i];

                    subparser.addArgument(arg.name, arg.options);
                }
            }

            var args = parser.parseArgs();
            command = args.command;
            delete args.command;

            client.write(cbor.encode({
                action: 'command',
                command: command,
                args: args
            }));
            break;

        case 'out':
            console.log(data.data); 
            break;
    }
});
