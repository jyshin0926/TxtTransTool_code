var sockserver = require('./sockserver.js'),
    cbor = require('cbor'),
    objutil = require('./util/object'),
    CborDecoder = cbor.Decoder

var commands = {}

function registerCommand(name, args, callback) {
    commands[name] = {
        args: args,
        callback: callback
    };
}

function startServer() {
    sockserver(function (client) {
        var decoder = new CborDecoder()

        decoder.on('data', function (data) {
            switch (data.action) {
                case 'list':
                    client.write(cbor.encode({type: 'list', 
                        data: objutil.map(commands, function(item) { 
                            return item.args
                        })
                    }));
                    break;

                case 'command':
                    commands[data.command].callback(data.args, function (data) {
                        client.write(cbor.encode({ type: 'out', data: data }));
                    }, function () { client.end(); });
                    break;
            }
        });

        client.on('error', function (error) {
            console.log('clac error', error);
        });

        client.pipe(decoder);
    });
};


module.exports = {
    register: registerCommand,
    start: startServer
};
